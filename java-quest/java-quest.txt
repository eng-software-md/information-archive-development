Perguntas e Respostas Java


[1] O que é Java?
 Java é uma linguagem de programação orientada a objetos, robusta, multiplataforma, de tipagem forte e amplamente utilizada para o desenvolvimento de aplicações desktop, web, mobile e sistemas embarcados.

[2] Qual é a diferença entre Java e JavaScript?
 Java é uma linguagem de propósito geral, compilada, orientada a objetos, usada também em backend e aplicações grandes.
 JavaScript é uma linguagem interpretada, utilizada principalmente para scripts em páginas web no lado cliente (embora também possa ser utilizada no backend com Node.js).

[3] Qual é o princípio básico da programação Java?
 O princípio básico é a Orientação a Objetos, baseada em conceitos como classes, objetos, abstração, encapsulamento, herança e polimorfismo.

[4] Quais são as principais características do Java?
 Portabilidade (write once, run anywhere), segurança, robustez, orientação a objetos, gerenciamento automático de memória (garbage collection) e grande biblioteca padrão (Java API).

[5] O que é uma classe em Java?
 É um molde ou estrutura que define os atributos (variáveis) e métodos (comportamentos) que os objetos daquele tipo terão.

[6] O que é um objeto em Java?
 É uma instância de uma classe, contendo valores específicos para seus atributos e sendo capaz de executar métodos definidos na classe.

[7] O que é um método em Java?
 Método é uma função que faz parte de uma classe/objeto, responsável por realizar ações ou calcular valores.

[8] Qual é a diferença entre uma classe e um objeto?
 Classe é o projeto (definição), e objeto é a concretização desse projeto (instância em memória).

[9] O que é herança em Java?
 É o mecanismo que permite que uma classe (subclasse) receba os atributos e métodos de outra classe (superclasse), promovendo reutilização de código.

[10] Quais são os tipos de herança em Java?
 - Herança simples (de uma única classe)
 - Herança hierárquica (uma superclasse com várias subclasses)
 Obs.: Java não permite herança múltipla de classes (apenas de interfaces).

===============================================================================================================

[11] O que é polimorfismo em Java?
 Capacidade de tratar objetos de diferentes classes derivadas de forma uniforme, permitindo que métodos com mesmo nome possam ter comportamentos diferentes.

[12] O que são modificadores de acesso em Java?
 Palavras-chave que controlam a visibilidade de atributos, métodos e classes (`public`, `private`, `protected` e default/pacote).

[13] O que é encapsulamento em Java?
 É o princípio de esconder informações internas do objeto e expor apenas o necessário, geralmente usando modificadores de acesso.

[14] O que é um construtor em Java?
 Método especial chamado ao criar um objeto, com o mesmo nome da classe, que inicializa os atributos.

[15] Qual é a diferença entre um construtor e um método?
 Construtor é chamado automaticamente ao criar o objeto e não tem tipo de retorno; método é chamado explicitamente e define um tipo de retorno.

[16] O que é a Máquina Virtual Java (JVM)?
 É o ambiente de execução responsável por interpretar e executar o bytecode Java em qualquer sistema operacional.

[17] O que é o Java Development Kit (JDK)?
 É o kit de desenvolvimento Java, incluindo compilador, ferramentas e biblioteca padrão para criar aplicações Java.

[18] Qual é a diferença entre o JDK e o JRE?
 JDK inclui o JRE mais ferramentas de desenvolvimento; JRE contém apenas o necessário para executar aplicações Java.

[19] O que é um pacote em Java?
 É uma forma de organizar as classes em namespaces, evitando conflitos de nomes e facilitando a estruturação do projeto.

[20] Qual é a diferença entre uma classe abstrata e uma interface?
 Classe abstrata pode ter métodos implementados e atributos; interface só define métodos (sem implementação até Java 8, que permitiu métodos default/static).

===============================================================================================================

[21] O que é um método estático em Java?
 Método que pertence à classe (não ao objeto) e pode ser chamado sem instanciar a classe.

[22] Para que serve a palavra-chave “final” em Java?
 Torna algo imutável:
 - class: não pode ser herdada
 - método: não pode ser sobrescrito
 - variável: valor não pode ser alterado

[23] O que é sobrecarga de método em Java?
 Definição de vários métodos com o mesmo nome, mas com diferentes parâmetros.

[24] O que é substituição de método em Java?
 Quando uma subclasse implementa novamente um método já definido na superclasse, alterando seu comportamento (usa-se @Override).

[25] Qual é a diferença entre sobrecarga de método e substituição de método?
 Sobrecarga (Overload): mesmo nome, diferentes parâmetros, mesma classe.
 Substituição (Override): mesmo nome, mesma assinatura, mas em classes diferentes (herança).

[26] O que é a palavra-chave “this” em Java?
 Refere-se ao próprio objeto da classe atual.

[27] O que é uma variável estática em Java?
 Variável de classe, compartilhada entre todas as instâncias.

[28] Qual é a finalidade da palavra-chave “final” nos parâmetros do método?
 Evita que o valor do parâmetro seja modificado dentro do método.

[29] Qual é o propósito da palavra-chave “static” em Java?
 Define membros de classe (atributos e métodos) sem a necessidade de um objeto.

[30] Qual é a diferença entre “==” e “.equals()” em Java?
 “==” compara referências (endereços de memória); “.equals()” compara conteúdos (caso esteja sobrescrito corretamente para esse propósito).

===============================================================================================================

[31] Qual é o propósito da palavra-chave “super” em Java?
Permite acessar métodos e atributos da superclasse a partir de uma subclasse, além de ser utilizada para chamar o construtor da classe pai.

[32] O que é uma thread em Java?
Thread é uma unidade de execução independente, ou seja, um fluxo separado dentro de um programa, permitindo paralelismo e multitarefa.

[33] Como você cria e inicia um thread em Java?
Pode-se estender a classe `Thread` e sobrescrever o método `run()`, ou implementar a interface `Runnable` e passar para um objeto `Thread`. Para iniciar, chama-se o método `start()`.

[34] O que é sincronização em Java?
Sincronização é o mecanismo para controlar o acesso de múltiplas threads a um recurso compartilhado, evitando problemas de concorrência e dados inconsistentes.

[35] Qual é a diferença entre o bloco “sincronizado” e o método “sincronizado”?
O bloco sincronizado restringe a sincronização apenas a parte do código escolhida, enquanto o método sincronizado sincroniza toda a execução do método.

[36] Qual é o propósito da palavra-chave “volatile” em Java?
Garante que mudanças realizadas em uma variável por uma thread sejam visíveis imediatamente para outras threads.

[37] O que é uma exceção em Java?
É um evento que interrompe o fluxo normal do programa, sinalizando erros que podem ser tratados pelo código.

[38] Qual é a diferença entre exceções verificadas e não verificadas?
Exceções verificadas (checked) precisam ser tratadas ou declaradas no método; exceções não verificadas (unchecked) são subclasses de `RuntimeException` e não exigem tratamento obrigatório.

[39] Como você lida com exceções em Java?
Utilizando blocos `try-catch` para capturar e tratar exceções, e opcionalmente `finally` para executar um bloco obrigatoriamente ao final.

[40] Qual é o propósito do bloco “finally” no tratamento de exceções?
Executar código de limpeza ou encerramento, independentemente de ter ocorrido exceção ou não.

===============================================================================================================









